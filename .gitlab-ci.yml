stages:
  - test
  - test-deploy
  - release

cache:
  paths:
    - .m2/

test:jdk-8:mongo-3.2:
  stage: test
  image: maven:3.5.3-jdk-8
  services:
    - mongo:3.2
  script: export MARK_MONGO_HOST="mongo" && mvn clean install -Dgpg.skip=true -Dmaven.repo.local=.m2
  
test:jdk-8:mongo-3.6:
  stage: test
  image: maven:3.5.3-jdk-8
  services:
    - mongo:3.6
  script: export MARK_MONGO_HOST="mongo" && mvn clean install -Dgpg.skip=true -Dmaven.repo.local=.m2    
  artifacts:
    paths:
    - "server/target/server-*-standalone.zip"
    - "server/target/site/jacoco"

test:jdk-9:mongo-3.6:
  stage: test
  image: maven:3.5.3-jdk-9
  services:
    - mongo:3.6
  script: export MARK_MONGO_HOST="mongo" && mvn clean install -Dgpg.skip=true -Dmaven.repo.local=.m2 -Djvm.options="--illegal-access=permit"


test:jdk-10:mongo-3.6:
  stage: test
  image: maven:3.5.3-jdk-10
  services:
    - mongo:3.6
  script: export MARK_MONGO_HOST="mongo" && mvn clean install -Dgpg.skip=true -Dmaven.repo.local=.m2 -Djvm.options="--illegal-access=permit"

test:jdk-11:mongo-3.6:
  stage: test
  image: maven:3.5.3-jdk-11
  services:
    - mongo:3.6
  script: export MARK_MONGO_HOST="mongo" && mvn clean install -Dgpg.skip=true -Dmaven.repo.local=.m2 -Djvm.options="--illegal-access=permit"


test:deploy:
  stage: test-deploy
  image: ubuntu:18.04
  dependencies:
    # so we don't have to compile the code ourselfs..
    - test:jdk-8:mongo-3.6
  script:
    # install what we need
    - apt-get update
    - apt-get install -y mongodb openjdk-8-jdk
    - service mongodb start
    # run example server
    - bash example/run.sh &
    - sleep 30
    - kill %1
    # test we have some results...
    - bash example/test.sh



release:
  stage: release
  only:
    - tags
  image: cylab/php72
  script:
    - "curl https://download.cylab.be/api/mark/server-$CI_COMMIT_TAG-standalone.zip  --request POST --header \"Authorization: Bearer $UPLOAD_TOKEN\" -F \"file=@./server/target/server-$CI_COMMIT_TAG-standalone.zip\""
